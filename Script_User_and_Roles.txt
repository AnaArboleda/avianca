--2. Create 2 Tablespaces:
    --a. first one with 2 Gb and 1 datafile, tablespace should be named "avianca"
   
--CREATE TABLESPACES Avianca
CREATE TABLESPACE avianca
    DATAFILE 'C:\oraclexe\app\oracle\oradata\XE\df_avianca.dbf' SIZE 2G;

--b. Undo tablespace with 25Mb of space and 1 datafile
CREATE UNDO TABLESPACE undo_avianca
    DATAFILE 'C:\oraclexe\app\oracle\oradata\XE\df_undo_avianca.dbf' SIZE 25M;

--3. Set the undo tablespace to be used in the system 
ALTER SYSTEM SET UNDO_TABLESPACE = df_undo_avianca;

--4. Create a DBA user (with the role DBA) and assign it to the tablespace called "avianca", 
-- this user has unlimited space on the tablespace (The user should have permission to connect) 
  
CREATE USER dba_user_avianca
    IDENTIFIED BY dba_user_avianca
    DEFAULT TABLESPACE avianca
    QUOTA UNLIMITED ON avianca;

GRANT DBA, CONNECT TO dba_user_avianca;

--5. Create 2 profiles. (0.125)
    --a. Profile 1: "clerk" password life 40 days, one session per user, 10 minutes idle, 4 failed login
        --attempts
    CREATE PROFILE PRF_cleck LIMIT
        SESSIONS_PER_USER    1
        PASSWORD_LIFE_TIME  40
        IDLE_TIME           10
        FAILED_LOGIN_ATTEMPTS   4;


    --b. Profile 3: "development" password life 100 days, two session per user, 30 minutes idle, no
        --failed login attempts
    CREATE PROFILE PRF_development LIMIT
        SESSIONS_PER_USER    2
        PASSWORD_LIFE_TIME  100
        IDLE_TIME           30;
        
--6. Create 4 users, assign them the tablespace "avianca?"; 2 of them should have the clerk profile and the
--remaining the development profile, all the users should be allow to connect to the database. (0.125)
    CREATE USER clerk_user1
    IDENTIFIED BY user1
    PROFILE PRF_cleck
    DEFAULT TABLESPACE avianca;
    --
    CREATE USER clerk_user2
    IDENTIFIED BY user1
    PROFILE PRF_cleck
    DEFAULT TABLESPACE avianca;
    --   
    CREATE USER development_user1
    IDENTIFIED BY user1
    PROFILE PRF_development
    QUOTA UNLIMITED ON avianca
    ACCOUNT UNLOCK
    DEFAULT TABLESPACE avianca;
    --
    CREATE USER development_user2
    IDENTIFIED BY user1
    PROFILE PRF_development
    DEFAULT TABLESPACE avianca;
--ADICIONAR PRIVIEGIO PARA CONECTAR Y CREAR TABLAS.
    GRANT CREATE SESSION, CREATE TABLE TO development_user1;
    
--7. Lock one user associate with clerk profile (0.125)
    ALTER USER clerk_user2
    IDENTIFIED BY user1
    DEFAULT TABLESPACE avianca
    PROFILE PRF_cleck
    ACCOUNT LOCK;
    
--8. Create tables with its columns according to your normalization.
    --i. If you are using Oracle 11g: Create sequences for every primary key.
    --ii. If you are using Oracle 12c: Use identity columns.
    --b. Create primary and foreign keys.
    --c. Insert (Use www.generatedata.com and generate a single script using sql developer to export all tables with its rows):
        --i. 500 pilots
        --ii. 2000 flight attendants
        --iii. All flights departing from Medellin according to the table with the schedule above
        --iv. Upload the info provided in the log for the Flight_AV120.csv
	
CREATE TABLE Aircrafts (
  aircraft_Id      INT NOT NULL PRIMARY KEY,
  registration     VARCHAR2(50) NOT NULL,
  Id_type_aircraft INT NOT NULL, 
  serial_number    INT NOT NULL,
  age              VARCHAR2(50) NOT NULL
  );

CREATE TABLE Type_Aircraft (
	type_Id		INT NOT NULL PRIMARY KEY, 
	description VARCHAR2(50) NOT NULL,
	code    	VARCHAR2(50) NOT NULL
);

CREATE TABLE Cities(
	city_Id      INT NOT NULL PRIMARY KEY,
	description  VARCHAR2(50) NOT NULL,
	country_name VARCHAR2(50) NOT NULL
);

CREATE TABLE Airport(
	airport_Id          INT NOT NULL PRIMARY KEY,
	Id_city             INT NOT NULL,
	airpot_abbreviation VARCHAR2(50) NOT NULL,
	name_airport        VARCHAR2(50) NOT NULL,
	latidude            VARCHAR2(50) NOT NULL,
	logitude            VARCHAR2(50) NOT NULL
);

CREATE TABLE Aircrews(
	aircrew_Id                  INT NOT NULL PRIMARY KEY,
	Id_type_aircrew             INT NOT NULL,
	first_name                  VARCHAR2(50) NOT NULL,
	last_name                   VARCHAR2(50) NULL,
	gender                      VARCHAR2(10) NULL,
	date_of_birth               DATE NULL,
	seniority                   NUMERIC(18, 0) NULL,
	date_last_training          DATE NULL,
	recidence_address           VARCHAR2(50) NULL,
	Email                       VARCHAR2(50) NULL,
	cell_phone                  VARCHAR2(15) NULL,
	rest_hours_last_flight      NUMERIC(18, 0) NULL,
	status                      NUMERIC(18, 0) NULL,
	current_location            NUMERIC(18, 0) NULL
);

CREATE TABLE Aircrew_Detail(
	pilot_Info_Id                   INT NOT NULL PRIMARY KEY,
	Id_aircrew                      INT NULL,
	level_english                   VARCHAR2(50) NULL,
	amount_accumulated_flight_hrs   NUMERIC(18, 0) NULL,
	TypeLicense                     VARCHAR2(50) NULL,
	Charge                          VARCHAR2(50) NULL
);

CREATE TABLE Type_Aircrew(
	type_aircrew_Id INT NOT NULL PRIMARY KEY,
	description     VARCHAR2(50) NULL
);

CREATE TABLE Passengers (
  id_Contact          INT NOT NULL PRIMARY KEY,
  first_name          VARCHAR2(255) NULL,
  last_name           VARCHAR2(255) NULL,
  Document_type       VARCHAR2(50) NULL,
  dentfication_number VARCHAR2(50) NULL,
  id_city             INT NOT NULL,
  Email               VARCHAR2(255) NULL,
  phone_number        VARCHAR2(100) NULL
);

CREATE TABLE Confirmation_CheckIn (
  id_confirmation      INT NOT NULL PRIMARY KEY,
  confirmation_type    VARCHAR2(50) NULL,
  State                VARCHAR2(255) NULL,
  id_flight_confirm    INT NULL,
  id_passenger         INT NULL,
  id_emergency_contact INT NULL
);

CREATE TABLE Routes (
  id_routes              INT NOT NULL PRIMARY KEY,
  id_airport_origin      INT NOT NULL,
  id_airport_destination INT NOT NULL,
  distance               VARCHAR2(50) NULL,
  id_flight              INT NULL,
  aircraft_required      VARCHAR2(50) NULL,
  weeidyfrecuendy        VARCHAR2(50) NULL,
  quantity_average_hours VARCHAR2(50) NULL,
  crew_required          VARCHAR2(50) NULL
);

CREATE TABLE Route_Itinerary (
  id_route_itinerary INT NOT NULL PRIMARY KEY,
  id_route           INT NULL,
  hour               NUMERIC(18,0) NULL,
  date_              DATE NULL,
  state              VARCHAR2(50) NULL
);

CREATE TABLE Flights_Confirmed (
  id_fligth_confirm     INT NOT NULL PRIMARY KEY,
  id_aircrew_confirm    INT NULL,
  actual_departure_time DATE NULL,
  hour_estimate_arrive  VARCHAR2(50) NULL,
  real_duration         VARCHAR2(50) NULL,
  id_assigned_aircraft  INT NULL,
  passenger_amount      INT NULL,
  id_flight             INT NULL
);

CREATE TABLE AirCrew_Confirm (
  id_aircrew_confirm INT NOT NULL PRIMARY KEY,
  id_aircrew_pilot   INT NULL,
  id_aircrew_copilot INT NULL
);

CREATE TABLE Flight(
	id_flight               INT NULL PRIMARY KEY,
	type_flight_description VARCHAR2(50) NULL,
	flight_number           VARCHAR2(50) NULL
);

CREATE TABLE Emergency_Contact (  
  id_Contact            INT NOT NULL PRIMARY KEY,
  first_name            VARCHAR2(50) NULL,
  last_name             VARCHAR2(50) NULL,
  document_type         VARCHAR2(50) NULL,
  identification_number VARCHAR2(50) NULL,
  id_city               INT NOT NULL,
  Email                 VARCHAR2(50) default NULL,
  phone_number          VARCHAR2(50) default NULL
);

CREATE TABLE Logs (
  id_log     INT NOT NULL PRIMARY KEY,
  time_stamp VARCHAR2(50) NULL,
  utc_time   VARCHAR2(255),
  Callsing   VARCHAR2(255),
  latitude   VARCHAR2(30) NULL,
  length     VARCHAR2(30) NULL,
  altitude   VARCHAR2(50) NULL,
  speed      VARCHAR2(50) NULL,
  address    VARCHAR2(255) NULL,
  id_fligth  INT NULL
);


ALTER TABLE Confirmation_CheckIn 
ADD FOREIGN KEY (id_flight_confirm )
REFERENCES Flights_Confirmed (id_fligth_confirm);

ALTER TABLE Confirmation_CheckIn 
ADD FOREIGN KEY (id_passenger)
REFERENCES Passengers (id_Contact);

ALTER TABLE Confirmation_CheckIn 
ADD FOREIGN KEY (id_emergency_contact)
REFERENCES Emergency_Contact(id_contact);

ALTER TABLE AirCrew_Confirm
ADD FOREIGN KEY (id_aircrew_pilot)
REFERENCES Aircrew_Detail(pilot_info_id);

ALTER TABLE Flights_Confirmed  
ADD FOREIGN KEY (id_aircrew_confirm)
REFERENCES AirCrew_Confirm(id_aircrew_confirm);

ALTER TABLE Flights_Confirmed  
ADD FOREIGN KEY (id_flight)
REFERENCES Flight(id_flight);

ALTER TABLE Routes 
ADD FOREIGN KEY (id_flight)
REFERENCES Flight(id_flight);

ALTER TABLE Route_Itinerary 
ADD FOREIGN KEY (id_route)
REFERENCES Routes(id_routes);

ALTER TABLE Routes 
ADD FOREIGN KEY (id_airport_origin)
REFERENCES Airport(airport_id);

ALTER TABLE Routes 
ADD FOREIGN KEY (id_airport_destination)
REFERENCES Airport(airport_id);

ALTER TABLE Passengers 
ADD FOREIGN KEY (id_city)
REFERENCES Cities(City_id);

ALTER TABLE Aircrews 
ADD FOREIGN KEY (Id_type_aircrew)
REFERENCES Type_Aircrew(type_aircrew_Id);

ALTER TABLE Aircrafts 
ADD FOREIGN KEY (Id_type_aircraft)
REFERENCES Type_Aircraft(type_Id);

ALTER TABLE Airport 
ADD FOREIGN KEY (Id_city)
REFERENCES Cities(city_Id);
